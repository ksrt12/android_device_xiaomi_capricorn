From c1a25fa430e8bbd4faed5c41004c8a9a04b8efa3 Mon Sep 17 00:00:00 2001
From: Kazakov Stepan <ksrt12group@gmail.com>
Date: Mon, 3 Dec 2018 00:06:42 +0300
Subject: [PATCH 4/5] base: allow home button to wake device [1/2]

Signed-off-by: Kazakov Stepan <ksrt12group@gmail.com>
---
 core/java/android/provider/Settings.java      |  6 +++++
 .../server/policy/PhoneWindowManager.java     | 22 +++++++++++++++----
 2 files changed, 24 insertions(+), 4 deletions(-)

diff --git a/core/java/android/provider/Settings.java b/core/java/android/provider/Settings.java
index 2d74213a298..cac9000470f 100644
--- a/core/java/android/provider/Settings.java
+++ b/core/java/android/provider/Settings.java
@@ -5751,6 +5751,12 @@ public final class Settings {
         public static final String TOAST_ICON = "toast_icon";
 
         /**
+         * Whether to wake the screen with the home key, the value is boolean.
+         * @hide
+         */
+        public static final String HOME_WAKE_SCREEN = "home_wake_screen";
+
+         /**
          * Enable or disable wifi data activity indicators
          * @hide
          */
diff --git a/services/core/java/com/android/server/policy/PhoneWindowManager.java b/services/core/java/com/android/server/policy/PhoneWindowManager.java
index 314227b09a6..9502500ae71 100644
--- a/services/core/java/com/android/server/policy/PhoneWindowManager.java
+++ b/services/core/java/com/android/server/policy/PhoneWindowManager.java
@@ -688,6 +688,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
     private DeviceKeyHandler mDeviceKeyHandler;
     private HardkeyActionHandler mKeyHandler;
     boolean mHasNavigationBar = false;
+    boolean mHomeWakeScreen;
     
     private boolean mHandleVolumeKeysInWM;
 
@@ -1263,6 +1264,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             resolver.registerContentObserver(Settings.System.getUriFor(
                     Settings.System.BOTTOM_GESTURE_SWIPE_LIMIT), false, this,
                     UserHandle.USER_ALL);
+            resolver.registerContentObserver(Settings.System.getUriFor(
+                    Settings.System.HOME_WAKE_SCREEN), false, this,
+                    UserHandle.USER_ALL);
             updateSettings();
         }
 
@@ -3151,6 +3155,9 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                     resolver, Settings.System.TORCH_LONG_PRESS_POWER_TIMEOUT, 0,
                     UserHandle.USER_CURRENT);
 
+            mHomeWakeScreen = Settings.System.getIntForUser(resolver,
+                    Settings.System.HOME_WAKE_SCREEN, 0, UserHandle.USER_CURRENT) == 1;
+
             // Configure wake gesture.
             boolean wakeGestureEnabledSetting = Settings.Secure.getIntForUser(resolver,
                     Settings.Secure.WAKE_GESTURE_ENABLED, 0,
@@ -3163,7 +3170,7 @@ public class PhoneWindowManager implements WindowManagerPolicy {
             // navbar
             mHasNavigationBar = DeviceUtils.deviceSupportNavigationBar(mContext);
 
-	    //Three Finger Gesture
+            //Three Finger Gesture
             boolean threeFingerGesture = Settings.System.getIntForUser(resolver,
                     Settings.System.THREE_FINGER_GESTURE, 0, UserHandle.USER_CURRENT) == 1;
             enableSwipeThreeFingerGesture(threeFingerGesture);
@@ -7035,7 +7042,6 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         final int source = event.getSource();
         final boolean navBarKey = source == InputDevice.SOURCE_NAVIGATION_BAR;
         final boolean appSwitchKey = keyCode == KeyEvent.KEYCODE_APP_SWITCH;
-        final boolean homeKey = keyCode == KeyEvent.KEYCODE_HOME;
         final boolean menuKey = keyCode == KeyEvent.KEYCODE_MENU;
         final boolean backKey = keyCode == KeyEvent.KEYCODE_BACK;
         final boolean virtualKey = event.getDeviceId() == KeyCharacterMap.VIRTUAL_KEYBOARD;
@@ -7072,12 +7078,12 @@ public class PhoneWindowManager implements WindowManagerPolicy {
         }
 
         if (mANBIHandler != null && mANBIEnabled && mANBIHandler.isScreenTouched()
-                && !navBarKey && (appSwitchKey || homeKey || menuKey || backKey)) {
+                && !navBarKey && (appSwitchKey || menuKey || backKey)) {
             return 0;
         }
 
         // Disable hw keys in Ambient and when screen off
-        if ((isDozeMode() || !isScreenOn()) && (appSwitchKey || homeKey || menuKey || backKey)) {
+        if ((isDozeMode() || !isScreenOn()) && (appSwitchKey || menuKey || backKey)) {
             return 0;
         }
 
@@ -7214,6 +7220,14 @@ public class PhoneWindowManager implements WindowManagerPolicy {
                 break;
             }
 
+            case KeyEvent.KEYCODE_HOME: {
+                if (down && !interactive && mHomeWakeScreen) {
+                    isWakeKey = true;
+                    Log.i(TAG, "Wakeup from Home");
+                }
+                break;
+            }
+
             case KeyEvent.KEYCODE_VOLUME_DOWN:
             case KeyEvent.KEYCODE_VOLUME_UP:
             case KeyEvent.KEYCODE_VOLUME_MUTE: {
-- 
2.19.1

