From ed8f22d36dd1b15ce102244b874d9d2a09f6b629 Mon Sep 17 00:00:00 2001
From: Joe Maples <joe@frap129.org>
Date: Wed, 15 Aug 2018 18:11:09 -0400
Subject: [PATCH 12/17] cc: Add support for Project Quicksilver

Change-Id: I0ba8cc2ef50b37d8cbe4374e08e22e49518af987
Signed-off-by: Joe Maples <joe@frap129.org>
---
 cc/builder.go       | 59 +++++++++++++++++++++++++++++++--------------
 cc/cc.go            | 20 +++++++++++++++
 cc/config/global.go | 14 +++++++++++
 cc/util.go          |  2 ++
 4 files changed, 77 insertions(+), 18 deletions(-)

diff --git a/cc/builder.go b/cc/builder.go
index 343a634e..f4bda40c 100644
--- a/cc/builder.go
+++ b/cc/builder.go
@@ -264,6 +264,8 @@ type builderFlags struct {
 	stripKeepSymbols       bool
 	stripKeepMiniDebugInfo bool
 	stripAddGnuDebuglink   bool
+
+	quicksilver bool
 }
 
 type Objects struct {
@@ -432,13 +434,22 @@ func TransformSourceToObj(ctx android.ModuleContext, subdir string, srcFiles and
 		var extraFlags string
 		var vendorFlags string
 		if flags.clang {
-			if flags.sdclang {
-				ccCmd = "${config.SDClangBin}/" + ccCmd
-				extraFlags = " ${config.SDClangFlags}"
+			if ctx.Device() {
+				if flags.quicksilver && flags.sdclang {
+					ccCmd = "${config.QuicksilverSDBin}" + ccCmd
+					extraFlags = " ${config.SDClangFlags}"
+				} else if flags.sdclang {
+					ccCmd = "${config.SDClangBin}/" + ccCmd
+					extraFlags = " ${config.SDClangFlags}"
+				} else if flags.quicksilver {
+					ccCmd = "${config.QuicksilverBin}" + ccCmd
+				} else {
+					ccCmd = "${config.ClangBin}/" + ccCmd
+				}
+				vendorFlags = " ${config.VendorClangFlags}"
 			} else {
 				ccCmd = "${config.ClangBin}/" + ccCmd
 			}
-			vendorFlags = " ${config.VendorClangFlags}"
 		} else {
 			ccCmd = gccCmd(flags.toolchain, ccCmd)
 		}
@@ -630,13 +641,19 @@ func TransformObjToDynamicBinary(ctx android.ModuleContext,
 	var extraFlags string
 	var vendorFlags string
 	if flags.clang {
-		if flags.sdclang {
-			ldCmd = "${config.SDClangBin}/clang++"
-			extraFlags = " ${config.SDClangFlags}"
-		} else {
-			ldCmd = "${config.ClangBin}/clang++"
-		}
-		vendorFlags = " ${config.VendorClangFlags}"
+		ldCmd = "${config.ClangBin}/clang++"
+		if ctx.Device() {
+			if flags.quicksilver && flags.sdclang {
+				ldCmd = "${config.QuicksilverSDBin}clang++"
+				extraFlags = " ${config.SDClangFlags}"
+			} else if flags.sdclang {
+				ldCmd = "${config.SDClangBin}/clang++"
+				extraFlags = " ${config.SDClangFlags}"
+			} else if flags.quicksilver {
+				ldCmd = "${config.QuicksilverBin}clang++"
+			}
+			vendorFlags = " ${config.VendorClangFlags}"
+                }
 	} else {
 		ldCmd = gccCmd(flags.toolchain, "g++")
 	}
@@ -802,13 +819,19 @@ func TransformObjsToObj(ctx android.ModuleContext, objFiles android.Paths,
         var extraFlags string
         var vendorFlags string
 	if flags.clang {
-		if flags.sdclang {
-			ldCmd = "${config.SDClangBin}/clang++"
-			extraFlags = " ${config.SDClangFlags}"
-		} else {
-			ldCmd = "${config.ClangBin}/clang++"
-		}
-		extraFlags = " ${config.VendorClangFlags}"
+		ldCmd = "${config.ClangBin}/clang++"
+		if ctx.Device() {
+			if flags.quicksilver && flags.sdclang {
+				ldCmd = "${config.QuicksilverSDBin}clang++"
+				extraFlags = " ${config.SDClangFlags}"
+			} else if flags.sdclang {
+				ldCmd = "${config.SDClangBin}/clang++"
+				extraFlags = " ${config.SDClangFlags}"
+			} else if flags.quicksilver {
+				ldCmd = "${config.QuicksilverBin}clang++"
+			}
+			vendorFlags = " ${config.VendorClangFlags}"
+                }
 	} else {
 		ldCmd = gccCmd(flags.toolchain, "g++")
 	}
diff --git a/cc/cc.go b/cc/cc.go
index 99d7cc0c..0023d082 100644
--- a/cc/cc.go
+++ b/cc/cc.go
@@ -147,6 +147,8 @@ type Flags struct {
 
 	GroupStaticLibs bool
 	ArGoldPlugin    bool // Whether LLVM gold plugin option is passed to llvm-ar
+
+	Quicksilver bool // Whether module supports Quicksilver or not
 }
 
 type ObjectLinkerProperties struct {
@@ -177,6 +179,9 @@ type BaseProperties struct {
 	// *.logtags files, to combine together in order to generate the /system/etc/event-log-tags
 	// file
 	Logtags []string
+
+	// Whether module supports Quicksilver or not
+	Quicksilver *bool `android:"arch_variant"`
 }
 
 type VendorProperties struct {
@@ -680,6 +685,7 @@ func (c *Module) GenerateAndroidBuildActions(actx android.ModuleContext) {
 		Toolchain: c.toolchain(ctx),
 		Clang:     c.clang(ctx),
 		Sdclang:   c.sdclang(ctx),
+		Quicksilver: c.quicksilver(ctx),
 	}
 	if c.compiler != nil {
 		flags = c.compiler.compilerFlags(ctx, flags, deps)
@@ -1613,6 +1619,20 @@ func getCurrentNdkPrebuiltVersion(ctx DepsContext) string {
 	return ctx.Config().PlatformSdkVersion()
 }
 
+func (c *Module) quicksilver(ctx BaseModuleContext) bool {
+	quicksilver := Bool(c.Properties.Quicksilver)
+
+	if !c.clang(ctx) {
+		quicksilver = false
+	}
+
+	if ctx.Host() {
+		quicksilver = false
+	}
+
+	return quicksilver
+}
+
 var Bool = proptools.Bool
 var BoolPtr = proptools.BoolPtr
 var String = proptools.String
diff --git a/cc/config/global.go b/cc/config/global.go
index 5842dcce..debacb67 100644
--- a/cc/config/global.go
+++ b/cc/config/global.go
@@ -245,6 +245,20 @@ func init() {
 		}
 		return ""
 	})
+
+	pctx.VariableFunc("QuicksilverBin", func(ctx android.PackageVarContext) string {
+		if override := ctx.Config().Getenv("QUICKSILVER_BIN"); override != "" {
+			return override
+		}
+		return "${ClangBin}/"
+	})
+
+	pctx.VariableFunc("QuicksilverSDBin", func(ctx android.PackageVarContext) string {
+		if override := ctx.Config().Getenv("QUICKSILVER_SD_BIN"); override != "" {
+			return override
+		}
+		return "${SDClangBin}/"
+	})
 }
 
 func setSdclangVars() {
diff --git a/cc/util.go b/cc/util.go
index 73e828fa..2fe1274c 100644
--- a/cc/util.go
+++ b/cc/util.go
@@ -87,6 +87,8 @@ func flagsToBuilderFlags(in Flags) builderFlags {
 
 		groupStaticLibs: in.GroupStaticLibs,
 		arGoldPlugin:    in.ArGoldPlugin,
+
+		quicksilver:          in.Quicksilver,
 	}
 }
 
-- 
2.19.1

