From 02aadd7c51e3d22c54debdb71e90c1abbf731854 Mon Sep 17 00:00:00 2001
From: Joe Maples <joe@frap129.org>
Date: Mon, 27 Aug 2018 11:52:42 -0400
Subject: [PATCH 14/17] cc: Make SDClang opt-in per device

Change-Id: Ibe09da362875fa7a7d90c19b6fc9a98b083ebe23
Signed-off-by: Joe Maples <joe@frap129.org>
---
 cc/config/global.go | 35 ++++++++++++++++++++++++++++++++++-
 1 file changed, 34 insertions(+), 1 deletion(-)

diff --git a/cc/config/global.go b/cc/config/global.go
index 16f5dfe5..d16e5eef 100644
--- a/cc/config/global.go
+++ b/cc/config/global.go
@@ -15,9 +15,12 @@
 package config
 
 import (
+	"encoding/json"
 	"fmt"
+	"os"
 	"io/ioutil"
 	"path"
+	"path/filepath"
 	"runtime"
 	"strconv"
 	"strings"
@@ -187,7 +190,7 @@ func init() {
 	// Override SDCLANG if the varialbe is set in the environment
 	if sdclang := android.SdclangEnv["SDCLANG"]; sdclang != "" {
 		if override, err := strconv.ParseBool(sdclang); err == nil {
-			SDClang = override
+			SDClang = override && useSdclang()
 		}
 	}
 
@@ -324,3 +327,33 @@ func replaceFirst(slice []string, from, to string) {
 	}
 	slice[0] = to
 }
+
+func useSdclang() bool {
+	var outDir string
+	outDir = android.SdclangEnv["OUT_DIR"]
+	if outDir == "" {
+		outDir = android.SdclangEnv["ANDROID_BUILD_TOP"] + "/out"
+	}
+
+
+	varFile := filepath.Join(outDir, "/soong/soong.variables")
+	//fmt.Println(varFile)
+	var varConfig interface{}
+	if file, err := os.Open(varFile); err == nil {
+		decoder := json.NewDecoder(file)
+		// Parse the config file
+		if err := decoder.Decode(&varConfig); err == nil {
+			config := varConfig.(map[string]interface{})
+			// Retrieve the Carbon block
+			if dev, ok := config["Carbon"]; ok {
+				devConfig := dev.(map[string]interface{})
+				// Get value of TARGET_USE_SDCLANG
+				if _, ok := devConfig["Target_use_sdclang"]; ok {
+					return devConfig["Target_use_sdclang"].(bool)
+				}
+			}
+		}
+		file.Close()
+	}
+	return false
+}
-- 
2.19.1

