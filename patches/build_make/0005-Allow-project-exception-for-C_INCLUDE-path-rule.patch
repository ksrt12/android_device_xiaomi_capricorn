From f4642a508d64f0fd19b31cab37682f1552660997 Mon Sep 17 00:00:00 2001
From: David Ng <dave@codeaurora.org>
Date: Fri, 2 Dec 2016 14:11:34 -0800
Subject: [PATCH 05/19] Allow project exception for C_INCLUDE path rule

Add TARGET_CINCLUDES_EXCEPTION_PROJECTS to specify a list of
projects to exclude when enforcing the C_INCLUDE path rule
(i.e. not just in source path or in out/).

Change-Id: I72f6619c82fc4a4500663a36814b217c55445218
Signed-off-by: Joe Maples <joe@frap129.org>
---
 core/binary.mk | 14 +++++++++++++-
 1 file changed, 13 insertions(+), 1 deletion(-)

diff --git a/core/binary.mk b/core/binary.mk
index 038f8a114..f65e97444 100644
--- a/core/binary.mk
+++ b/core/binary.mk
@@ -1519,9 +1519,21 @@ ifeq ($(LOCAL_SDK_VERSION)$(LOCAL_USE_VNDK),)
   my_c_includes += $(JNI_H_INCLUDE)
 endif
 
+# Find $1 in the exception project list.
+define find_in_cincludes_exception_projects
+$(subst $(space),, \
+  $(foreach project,$(TARGET_CINCLUDES_EXCEPTION_PROJECTS), \
+    $(if $(filter $(project)%,$(1)),$(project)) \
+  ) \
+)
+endef
+
 my_outside_includes := $(filter-out $(OUT_DIR)/%,$(filter /%,$(my_c_includes)))
 ifneq ($(my_outside_includes),)
-$(error $(LOCAL_MODULE_MAKEFILE): $(LOCAL_MODULE): C_INCLUDES must be under the source or output directories: $(my_outside_includes))
+# Further filter out optional exceptions
+  ifeq ($(call find_in_cincludes_exception_projects,$(LOCAL_MODULE_MAKEFILE)),)
+    $(error $(LOCAL_MODULE_MAKEFILE): $(LOCAL_MODULE): C_INCLUDES must be under the source or output directories: $(my_outside_includes))
+  endif
 endif
 
 # all_objects includes gen_o_objects which were part of LOCAL_GENERATED_SOURCES;
-- 
2.19.1

